/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package guis;

import controlador.Controlador;
import entidades.Emprestimo;
import entidades.Livro;
import entidades.Usuario;
import entidades.Usuario;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.LinkedList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import tabela.ModeloTabela;
import tabela.ObjetoTabela;
import tabela.TableCellRenderer;

/**
 * Classe responsavel por Consultar, Salvar, Atualizar e Excluir categorias
 *
 * Como funciona: Consultar: Ao abrir a janela, carregar os dados da Tabela.
 *
 * @author Matheus
 */
public class CadastroEmprestimoGUI extends javax.swing.JFrame {

    // cada CadastroXXXGUI tem que ter uma instância de Controlador
    // acessa o banco de dados por você e tem regras de validação
    private Controlador controlador = new Controlador();

    // Usuario Selecionada quando clicamos na tabela
    private Emprestimo emprestimoSelecionado = new Emprestimo();

    public CadastroEmprestimoGUI() {
        initComponents();
        // estado inicial da sua tela
        carregarUsuarios();
        carregarLivros();
        novoEmprestimo();
        configuracoesVisuaisDaTabela();
        carregarDadosNaTabela();
        this.setLocationRelativeTo(null);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btAtualizar = new javax.swing.JButton();
        btSalvar = new javax.swing.JButton();
        btNovo = new javax.swing.JButton();
        btExcluir = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane2 = new javax.swing.JScrollPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbEmprestimo = new javax.swing.JTable();
        cbUsuario = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        cbLivro = new javax.swing.JComboBox();
        txEmprestimo = new javax.swing.JFormattedTextField();
        txDevolucao = new javax.swing.JFormattedTextField();
        btNovo1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Cadastro de Empréstimo");

        jLabel2.setText("Emprestimo");

        jLabel3.setText("Devolução");

        btAtualizar.setText("Atualizar");
        btAtualizar.setEnabled(false);
        btAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAtualizarActionPerformed(evt);
            }
        });

        btSalvar.setText("Salvar");
        btSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSalvarActionPerformed(evt);
            }
        });

        btNovo.setText("Novo");
        btNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btNovoActionPerformed(evt);
            }
        });

        btExcluir.setText("Excluir");
        btExcluir.setEnabled(false);
        btExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btExcluirActionPerformed(evt);
            }
        });

        tbEmprestimo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tbEmprestimo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbEmprestimoMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbEmprestimo);

        jScrollPane2.setViewportView(jScrollPane1);

        cbUsuario.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbUsuarioItemStateChanged(evt);
            }
        });

        jLabel4.setText("Usuario");

        jLabel5.setText("Livro");

        cbLivro.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbLivroItemStateChanged(evt);
            }
        });

        txEmprestimo.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(java.text.DateFormat.getDateInstance(java.text.DateFormat.MEDIUM))));

        txDevolucao.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(java.text.DateFormat.getDateInstance(java.text.DateFormat.MEDIUM))));

        btNovo1.setText("Voltar");
        btNovo1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btNovo1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btExcluir)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btNovo1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btNovo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btAtualizar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btSalvar))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 507, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cbLivro, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cbUsuario, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txEmprestimo))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txDevolucao)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(6, 6, 6))
                    .addComponent(txEmprestimo, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(txDevolucao, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbLivro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btAtualizar)
                    .addComponent(btSalvar)
                    .addComponent(btNovo)
                    .addComponent(btExcluir)
                    .addComponent(btNovo1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Salvar: 1) Valide e pegue os dados os Txts, , crie uma instância de
     * Usuario com eles ; 2) Salve a categoria; 3) Cheque para ver se funcionou
     * como retorno; 4a) Se funcionou, mostre uma mensagem, limpe a tela e
     * carregue a tabela. Desabilitados Excluir e Atualizar; 4b) Se não
     * funcinou, apenas mostre uma mensagem de erro.
     *
     */
    private void btSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSalvarActionPerformed
        // Validar
        if (txDevolucao.getText().isEmpty() || txEmprestimo.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Campos não podem estar vazios!");
            return;
        }

        // Pegar os dados e criar instância
        Emprestimo emprestimo = new Emprestimo();
        String txEmp = txEmprestimo.getText();
        String devolucao = txDevolucao.getText();
        Usuario usuario = (Usuario) cbUsuario.getSelectedItem();
        Livro livro = (Livro) cbLivro.getSelectedItem();

        DateFormat format = new SimpleDateFormat("dd/MM/yyyy");
        try {
            emprestimo.setEmprestimo(format.parse(txEmp));
        } catch (ParseException ex) {
            Logger.getLogger(CadastroEmprestimoGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            emprestimo.setDevolucao(format.parse(devolucao));
        } catch (ParseException ex) {
            Logger.getLogger(CadastroEmprestimoGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        emprestimo.setLivro(livro);
        emprestimo.setUsuario(usuario);

        boolean salvou = controlador.salvarEmprestimo(emprestimo);

        //Testa se salvou
        if (salvou) {
            // volta a tela ao estado inicial
            novoEmprestimo();
            // recarrega a tabela para mostrar o novo registro
            carregarDadosNaTabela();
            // mostra mensagem
            JOptionPane.showMessageDialog(null,
                    "Empréstimo salvo com sucesso!");
        } else {
            JOptionPane.showMessageDialog(null,
                    "Erro ao salvar empréstimo. Tente novamente");
        }
    }//GEN-LAST:event_btSalvarActionPerformed

    /**
     * Seleciona uma categoria na tabela 1) Clica e seleciona uma categoria,
     * passamos para o objeto UsuarioSelecionado, um atributo da classe Gui; 2)
     * Com uma categoria selecionada, algumas coisas acontecem: Habilitar
     * excluir, Carregar os campos com a descrição e o período e Habilitar
     * atualizar e desabilitar Salvar.
     *
     * @param evt
     */
    private void tbEmprestimoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbEmprestimoMouseClicked
        // Recuperamos o ModeloTabela que passamos para tbCategoria,
        //    fazendo a conversão
        ModeloTabela nossoModeloTabela = (ModeloTabela) tbEmprestimo.getModel();

        // pega a linha selecionada
        // se nenhuma estiver, o valor é -1
        int linhaSelecionada = tbEmprestimo.getSelectedRow();
        if (linhaSelecionada == -1) {
            return;
        }
        ObjetoTabela valor = nossoModeloTabela.getValor(linhaSelecionada);
        emprestimoSelecionado = (Emprestimo) valor;

        DateFormat format = new SimpleDateFormat("dd/MM/yyyy");

        txEmprestimo.setText(format.format(emprestimoSelecionado.getEmprestimo()));
        txDevolucao.setText(format.format(emprestimoSelecionado.getDevolucao()));
        cbUsuario.getModel().setSelectedItem(emprestimoSelecionado.getUsuario());
        cbLivro.getModel().setSelectedItem(emprestimoSelecionado.getLivro());

        // habilitar e desabilitar botões
        btExcluir.setEnabled(true);
        btAtualizar.setEnabled(true);

        // habilitar botões que podem ser utilizados
        btSalvar.setEnabled(false);


    }//GEN-LAST:event_tbEmprestimoMouseClicked

    private void btNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btNovoActionPerformed
        novoEmprestimo();
    }//GEN-LAST:event_btNovoActionPerformed

    /**
     * Atualizar Lógica PARECIDA com o inserir.
     *
     *
     * @param evt
     */
    private void btAtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAtualizarActionPerformed
        // Validar
        if (txDevolucao.getText().isEmpty() || txEmprestimo.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Campos não podem estar vazios!");
            return;
        }

        // Pegar os dados e criar instância
        Emprestimo emprestimo = new Emprestimo();
        DateFormat format = new SimpleDateFormat("dd/MM/yyyy");

        emprestimo.setIdEmprestimo(emprestimoSelecionado.getIdEmprestimo());
        String txEmp = txEmprestimo.getText();
        String devolucao = txDevolucao.getText();;
        Usuario usuario = (Usuario) cbUsuario.getSelectedItem();
        Livro livro = (Livro) cbLivro.getSelectedItem();

        try {
            emprestimo.setEmprestimo(format.parse(txEmp));
        } catch (ParseException ex) {
            Logger.getLogger(CadastroEmprestimoGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            emprestimo.setDevolucao(format.parse(devolucao));
        } catch (ParseException ex) {
            Logger.getLogger(CadastroEmprestimoGUI.class.getName()).log(Level.SEVERE, null, ex);
        }

        emprestimo.setUsuario(usuario);
        emprestimo.setLivro(livro);

        // Salvando categoria - se uma vez vc n encontrar o método que precisa
        // em controlador, crie.
        boolean atualizou = controlador.atualizarEmprestimo(emprestimo);

        //Testa se salvou
        if (atualizou) {
            // volta a tela ao estado inicial
            novoEmprestimo();
            // recarrega a tabela para mostrar o registro atualizado
            carregarDadosNaTabela();
            // mostra mensagem
            JOptionPane.showMessageDialog(null,
                    "Empréstimo atualizado com sucesso!");
        } else {
            JOptionPane.showMessageDialog(null,
                    "Erro ao atualizar empréstimo. Tente novamente");
        }
    }//GEN-LAST:event_btAtualizarActionPerformed

    /**
     * Excluir 1) Perguntar primeiro 2) Se sim, excluir 3) voltar a tela no
     * estado inicial
     *
     */
    private void btExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btExcluirActionPerformed
        int opcaoEscolhida = JOptionPane.showConfirmDialog(null,
                "Deseja excluir o Empréstimo do livro"
                + emprestimoSelecionado.getLivro()+ "?");
        boolean deveExcluir = opcaoEscolhida == JOptionPane.OK_OPTION;
        if (!deveExcluir) {
            // não faz nada
            return;
        }
        boolean emprestimoExcluido = controlador.excluirEmprestimo(emprestimoSelecionado);
        // se o registro de categoria no BD estiver sendo referenciado em outras tabelas,
        // vai dar erro.

        if (emprestimoExcluido) {
            JOptionPane.showMessageDialog(null,
                    "Emprestimo do livro " + emprestimoSelecionado.getLivro() + " excluído com sucesso.");
            // volta a tela ao estado inicial
            novoEmprestimo();
            // recarrega a tabela para mostrar o registro atualizado
            carregarDadosNaTabela();

        } else {
            JOptionPane.showMessageDialog(null,
                    "Erro ao excluír o empréstimo do livro " + emprestimoSelecionado.getLivro()+ ".");
        }
    }//GEN-LAST:event_btExcluirActionPerformed

    private void cbUsuarioItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbUsuarioItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_cbUsuarioItemStateChanged

    private void cbLivroItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbLivroItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_cbLivroItemStateChanged

    private void btNovo1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btNovo1ActionPerformed
        PrincipalGUI novo = new PrincipalGUI();
        novo.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btNovo1ActionPerformed

    /**
     * Não é um evento, é um método a parte que é utilizado dentro de outros
     * eventos, como o salvar, excluir e clique no botão novo
     */
    private void novoEmprestimo() {
        // desabilita botoes que não podem ser utilizados
        btExcluir.setEnabled(false);
        btAtualizar.setEnabled(false);

        // habilitar botões que podem ser utilizados
        btSalvar.setEnabled(true);

        // limpa os campos
        txDevolucao.setText("");
        txEmprestimo.setText("");
        cbUsuario.setSelectedIndex(0);
        cbLivro.setSelectedIndex(0);

        // reseta a categoria selecionada
        emprestimoSelecionado = new Emprestimo();
    }

    /**
     * Não é um evento, é um método a parte que é utilizado dentro de outros
     * eventos, como o salvar, excluir e clique no botão novo
     */
    private void carregarDadosNaTabela() {
        // Puxa dados do controlador, que vem do CadastroXXX, do banco
        LinkedList emprestimos = controlador.consultarEmprestimos();

        // Instancia um Model
        ModeloTabela modeloTabela = new ModeloTabela(emprestimos, Emprestimo.COLUNAS);

        // Configura modelo na tabela
        tbEmprestimo.setModel(modeloTabela);
    }

    /**
     * Não é um evento, é um método a parte que é utilizado na primeira vez que
     * a janela abre, portanto, executado UMA UNICA VEZ
     */
    private void configuracoesVisuaisDaTabela() {
        // manual de tabelas
        tbEmprestimo.setColumnSelectionAllowed(false);
        tbEmprestimo.getTableHeader().setReorderingAllowed(false);
        tbEmprestimo.setDefaultRenderer(Object.class, new TableCellRenderer());
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAtualizar;
    private javax.swing.JButton btExcluir;
    private javax.swing.JButton btNovo;
    private javax.swing.JButton btNovo1;
    private javax.swing.JButton btSalvar;
    private javax.swing.JComboBox cbLivro;
    private javax.swing.JComboBox cbUsuario;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable tbEmprestimo;
    private javax.swing.JFormattedTextField txDevolucao;
    private javax.swing.JFormattedTextField txEmprestimo;
    // End of variables declaration//GEN-END:variables

    private void carregarUsuarios() {

        LinkedList consultarUsuarios = controlador.consultarUsuarios();

        if (consultarUsuarios.size() == 0) {
            btSalvar.setEnabled(false);
            return;

        }

        cbUsuario.setModel(new DefaultComboBoxModel(consultarUsuarios.toArray()));

    }

    private void carregarLivros() {

        LinkedList consultarLivros = controlador.consultarLivros();

        if (consultarLivros.size() == 0) {
            btSalvar.setEnabled(false);
            return;

        }

        cbLivro.setModel(new DefaultComboBoxModel(consultarLivros.toArray()));

    }

}
